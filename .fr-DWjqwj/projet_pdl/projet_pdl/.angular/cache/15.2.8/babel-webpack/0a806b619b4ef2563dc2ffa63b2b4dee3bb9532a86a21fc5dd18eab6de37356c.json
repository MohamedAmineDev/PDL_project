{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/authentification.service\";\nexport class RegisterComponent {\n  constructor(formBuilder, userService, router, authService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.registerForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.registerForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  // Getter pratique pour faciliter l'accès aux contrôles du formulaire\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    const registerRequest = {\n      nom: this.registerForm.value.nom,\n      prenom: this.registerForm.value.prenom,\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password\n    };\n    this.authService.register(registerRequest).subscribe(response => {\n      this.authService.storeAuthToken(response.token);\n      const authToken = this.authService.getAuthToken();\n      if (authToken) {\n        this.authService.getCurrentUser(authToken).subscribe(user => {\n          alert('Account added successfully!');\n          this.gotoList();\n        });\n      }\n    });\n  }\n  initUtilisateur() {\n    this.selectedUser = new User();\n    this.createForm();\n  }\n  gotoList() {\n    this.router.navigate(['login']);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthentificationService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 35,\n  vars: 1,\n  consts: [[1, \"vh-100\", 2, \"background-color\", \"#9A616D\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-5\", \"d-none\", \"d-md-block\"], [\"src\", \"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/img1.webp\", \"alt\", \"login form\", 1, \"img-fluid\", 2, \"border-radius\", \"1rem 0 0 1rem\", \"height\", \"600px\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [1, \"h1\", \"fw-bold\", \"mb-0\"], [\"src\", \"../../assets/logo.PNG\", 1, \"img\"], [\"]\", \"\", 3, \"[formGroup\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"nom\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"prenom\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"routerLink\", \"/home\", 1, \"btn\", \"btn-warning\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9)(10, \"span\", 10);\n      i0.ɵɵelement(11, \"img\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"form\", 12)(14, \"div\", 13)(15, \"label\");\n      i0.ɵɵtext(16, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"label\");\n      i0.ɵɵtext(20, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\");\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 13)(27, \"label\");\n      i0.ɵɵtext(28, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_30_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(31, \"Ajouter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \" \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(33, \"button\", 19);\n      i0.ɵɵtext(34, \"Annuler\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"[formGroup\", ctx.registerForm);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","User","RegisterComponent","constructor","formBuilder","userService","router","authService","registerForm","group","nom","required","prenom","email","password","minLength","ngOnInit","createForm","f","controls","onSubmit","registerRequest","value","register","subscribe","response","storeAuthToken","token","authToken","getAuthToken","getCurrentUser","user","alert","gotoList","initUtilisateur","selectedUser","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\projet_pdll\\projet_pdl\\src\\app\\register\\register.component.ts","D:\\projet_pdll\\projet_pdl\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { User } from '../models/User';\nimport { UserService } from '../services/user.service';\nimport { AuthentificationService } from '../services/authentification.service';\nimport { Registerrequest } from '../models/registerrequest';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  user!: User;\n  selectedUser!: User;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private authService: AuthentificationService\n  ) {\n    this.registerForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm() {\n    this.registerForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  // Getter pratique pour faciliter l'accès aux contrôles du formulaire\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit(): void {\n    const registerRequest: Registerrequest = {\n      nom: this.registerForm.value.nom,\n      prenom: this.registerForm.value.prenom,\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password\n    };\n  \n    this.authService.register(registerRequest).subscribe(\n      (response) => {\n        this.authService.storeAuthToken(response.token);\n        const authToken = this.authService.getAuthToken();\n        if (authToken) {\n          this.authService.getCurrentUser(authToken).subscribe(\n            (user) => {\n              alert('Account added successfully!');\n              this.gotoList();\n            \n            }\n           \n          );\n        }\n      },\n      \n      \n    );\n  }\n\n  initUtilisateur() {\n    this.selectedUser = new User();\n    this.createForm();\n  }\n\n  gotoList() {\n    this.router.navigate(['login']);\n  }\n}\n","<section class=\"vh-100\" style=\"background-color: #9A616D;\">\n    <div class=\"container py-5 h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col col-xl-10\">\n          <div class=\"card\" style=\"border-radius: 1rem;\">\n            <div class=\"row g-0\">\n              <div class=\"col-md-6 col-lg-5 d-none d-md-block\">\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/img1.webp\"\n                  alt=\"login form\" class=\"img-fluid\" style=\"border-radius: 1rem 0 0 1rem; height: 600px;\" />\n              </div>\n              <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n                <div class=\"card-body p-4 p-lg-5 text-black\">\n                  <span class=\"h1 fw-bold mb-0\"><img class=\"img\" src=\"../../assets/logo.PNG\" /></span>\n                  <br>\n                  <form [[formGroup]=\"registerForm\"]>\n                    <div class=\"form-group\">\n                      <label>First Name</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"nom\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label>Last Name</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"prenom\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"email\" />\n                    </div>\n                    <div class=\"form-group\">\n                      <label>Password</label>\n                      <input type=\"password\" class=\"form-control\" formControlName=\"password\"/>\n                    </div>\n                    <button class=\"btn btn-success\" (click)=\"onSubmit()\">Ajouter</button>\n                    &nbsp; &nbsp;\n                    <button class=\"btn btn-warning\" routerLink=\"/home\">Annuler</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}